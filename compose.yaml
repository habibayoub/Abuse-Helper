name: abuse-helper
services:
  frontend:
    build:
      context: frontend
      target: development
    networks:
      - client-side
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - VITE_KEYCLOAK_URL=http://localhost:8080
      - VITE_KEYCLOAK_REALM=Abuse-Helper
      - VITE_KEYCLOAK_CLIENT_ID=Abuse-Helper
      - VITE_KEYCLOAK_CLIENT_SECRET=**********
    depends_on:
      - backend

  backend:
    build:
      context: backend
      target: development
    environment:
      - ADDRESS=0.0.0.0:8000
      - RUST_LOG=debug
      - PG_DBNAME=postgres
      - PG_HOST=db
      - PG_USER=postgres
      - PG_PASSWORD=TCdKnfgf4SEXDnG
      - JWT_SECRET=dw3QKXwLxzufwTHymvWjfdMfMcDDlckc
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_REALM=Abuse-Helper
      - KEYCLOAK_CLIENT_ID=Abuse-Helper
      - KEYCLOAK_CLIENT_SECRET=**********
      - SMTP_SERVER=mailserver
      - SMTP_PORT=3025
      - IMAP_SERVER=mailserver
      - IMAP_PORT=3993
      - OLLAMA_HOST=http://llm:11434
    networks:
      - client-side
      - server-side
    ports:
      - 8000:8000
    volumes:
      - ./backend/src:/code/src
      - backend-cache:/code/target
    depends_on:
      llm:
        condition: service_healthy
      db:
        condition: service_started
      mailserver:
        condition: service_started

  db:
    image: postgres:12-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD=TCdKnfgf4SEXDnG
    networks:
      - server-side
    ports:
      - 5432:5432
    volumes:
      - db-data:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    command:
      - start-dev
      - --import-realm
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://keycloak-db:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak
      - KC_HOSTNAME=localhost
      - KC_HTTP_ENABLED=true
    ports:
      - 8080:8080
    networks:
      - client-side
      - server-side
    volumes:
      - ./kc.json:/opt/keycloak/data/import/realm.json
    depends_on:
      - keycloak-db

  keycloak-db:
    image: postgres:12-alpine
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloak
    networks:
      - server-side
    volumes:
      - keycloak-data:/var/lib/postgresql/data

  mailserver:
    image: greenmail/standalone:2.1.0-alpha-4
    ports:
      - "3025:3025" # SMTP
      - "3993:3993" # IMAPS
    environment:
      - GREENMAIL_OPTS=-Dgreenmail.setup.test.all -Dgreenmail.hostname=0.0.0.0 -Dgreenmail.users=test@localhost:password -Dgreenmail.auth.disabled -Dgreenmail.verbose

    networks:
      - server-side
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "3993" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  llm:
    image: ollama/ollama:latest
    volumes:
      - ollama_models:/root/.ollama
    ports:
      - "11434:11434"
    networks:
      - server-side
    tty: true
    restart: always
    pull_policy: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:11434" ]
      interval: 30s
      timeout: 5s
      retries: 5
    entrypoint: [ "/bin/sh", "-c" ]
    command:
      - |
        apt-get update && apt-get install -y curl
        ollama serve &
        sleep 5
        until curl -s -f http://localhost:11434 > /dev/null 2>&1; do
          echo "Waiting for Ollama to start..."
          sleep 1
        done
        echo "Ollama is up, pulling model..."
        ollama pull llama3.2:1b
        wait

networks:
  client-side: {}
  server-side: {}

volumes:
  backend-cache: {}
  db-data: {}
  keycloak-data: {}
  ollama_models: {}
